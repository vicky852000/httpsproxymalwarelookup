import logging


class CallerLogs:
    @classmethod
    def createCallerLogger(cls):
        logger = logging.getLogger('ServiceCaller')
        hdlr = logging.FileHandler('service_caller.log')
        formatter = logging.Formatter('%(asctime)s %(levelname)s %(message)s')
        hdlr.setFormatter(formatter)
        logger.addHandler(hdlr)
        logger.setLevel(logging.INFO)
        return logger

    @classmethod
    def createDBLogger(cls):
        logger = logging.getLogger('DBLogger')
        hdlr = logging.FileHandler('service_db.log')
        formatter = logging.Formatter('%(asctime)s %(levelname)s %(message)s')
        hdlr.setFormatter(formatter)
        logger.addHandler(hdlr)
        logger.setLevel(logging.INFO)
        return logger

    @classmethod
    def createServiceLogger(cls):
        logger = logging.getLogger('ServiceLayer')
        hdlr = logging.FileHandler('service_layer.log')
        formatter = logging.Formatter('%(asctime)s %(levelname)s %(message)s')
        hdlr.setFormatter(formatter)
        logger.addHandler(hdlr)
        logger.setLevel(logging.INFO)
        return logger

    @classmethod
    def createServiceUTLogger(cls):
        logger = logging.getLogger('UnitTestLogger')
        hdlr = logging.FileHandler('unit_test.log')
        formatter = logging.Formatter('%(asctime)s %(levelname)s %(message)s')
        hdlr.setFormatter(formatter)
        logger.addHandler(hdlr)
        logger.setLevel(logging.INFO)
        return logger